name: Publish

on:
  workflow_dispatch:

env:
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  GITHUB_ACTIONS: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      Version: ${{ steps.gitversion.outputs.SemVer }}
      CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}
    
    steps:
      -   uses: actions/checkout@v4
          with:
            fetch-depth: 0

      - name: Setup .NET Core
        uses: actions/setup-dotnet@v2
        with:
          dotnet-version: '8.0.x'

      - name: Tool Restore
        run: dotnet tool restore

      -   name: Install GitVersion
          uses: gittools/actions/gitversion/setup@v0.10.2
          with:
            versionSpec: 5.x

      -   name: Determine Version
          uses: gittools/actions/gitversion/execute@v0.10.2
          id: gitversion

      -   name: Display GitVersion outputs
          run: |
            echo "Version: ${{ steps.gitversion.outputs.SemVer }}"
            echo "CommitsSinceVersionSource: ${{ steps.gitversion.outputs.CommitsSinceVersionSource }}"

      -   name: Run tests
          run: dotnet test --verbosity normal

      -   name: Copy README
          run: cp README.md ./HttpContextExtensions

      -   name: Copy icon
          run: cp icon.png ./HttpContextExtensions

      -   name: Build and Pack NuGet package
          run: dotnet pack --configuration Release --include-symbols -p:Version='${{ steps.gitversion.outputs.SemVer }}' --output ./Package

      -   name: Upload NuGet artifact to GitHub
          uses: actions/upload-artifact@v3
          with:
            name: libPackage
            path: ./Package
  
  release:
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' && needs.build.outputs.CommitsSinceVersionSource > 0
    needs: build
    
    steps:
      -   name: Download lib nuget package artifact
          uses: actions/download-artifact@v3
          with:
            name: libPackage
            path: ./libPackage

      -   name: Push package to Nuget
          run: |
            dotnet nuget push libPackage/*.nupkg --api-key ${{ secrets.NUGET_API_KEY }} --source https://api.nuget.org/v3/index.json --skip-duplicate

      -   name: Create Release
          uses: ncipollo/release-action@v1
          with:
            tag: ${{ needs.build.outputs.Version }}
            name: Release ${{ needs.build.outputs.Version }}
            artifacts: "libPackage/*"
            token: ${{ secrets.GITHUB_TOKEN }}
